/*
Accordions

Accordions help users find only the content they need.

The **expand/collapse all** feature will be provided soon &mdash; this will be mandatory if using a series of accordion elements.

***

This guidance is in part adapted from <a href="https://standards.usa.gov/getting-started/" rel="external">18F Draft US Web Design Standards</a> under <a href="https://creativecommons.org/publicdomain/zero/1.0/legalcode" rel="external">CC0 1.0 Universal</a>.

Markup: templates/accordion.hbs

Style guide: Accordions
*/

/*
Usability

When designing or writing accordions:

- Don't use an accordion if the user needs to see all of the information. Structure and rewrite your content instead.
- Use a succinct but descriptive accordion headings / labels.
- Use [definition or description lists](section-typography.html#guide-typography-5-lists) for glossaries instead of accordions.

When implementing accordions:

- Accordions can be set to open or closed initially using `aria-expanded` property set to `true` or `false`.
- JavaScript behaviour is used to replace the browser default for `<details>`.
- For multiple accordion elements each `details` element must have its own `data-label` attribute.
- This framework allows a text/string search of accordion content, even when collapsed (string itself remains hidden until opened).

<details data-label="accordions-accessibility" aria-expanded="false">
  <summary>Accessibility &amp; browser testing</summary>
  <div class="accordion-panel">
    <p>Passed:</p>
    <ul>
      <li>HTML5 validation (automated)</li>
      <li>WCAG:AA compliant (automated)</li>
    </ul>
    <p>Untested:</p>
    <ul>
      <li>WCAG:AA manual</li>
      <li>Browser support &mdash; automated and manual</li>
    </ul>
  </div>
</details>

Style guide: Accordions.1 Usability
*/

details,
.accordion {
  display: block;
  margin: $base-spacing 0 0;
  overflow: hidden;

  & + details,
  & + .accordion {
    margin-top: $small-spacing;
  }
}

.accordion-button,
summary {
  display: block;
  position: relative;
  width: 100%;
  height: auto;
  margin: 0;
  padding: $small-spacing;
  border-bottom: none;
  border-top-right-radius: $tiny-border-radius;
  border-top-left-radius: $tiny-border-radius;
  background-color: $lighter-aqua;
  color: $darker-aqua;
  text-align: left;
  font-weight: $bold-font-weight;
  cursor: pointer;
  transition: background-color $transition-timing-fast $transition-easing;

  // Remove vanilla summary styles.
  &::-webkit-details-marker {
    display: none;
  }

  &:hover,
  &:focus {
    outline: none;
    background-color: $light-aqua;
    color: $non-black;
  }

  &::before {
    @extend %icon-chevron-down--navy;

    content: '';
    position: absolute;
    top: .5em;
    bottom: .5em;
    right: $small-spacing;
    width: $medium-spacing;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 100% auto;
    transform: rotate(0deg);
    transition: transform $transition-timing $transition-easing;

    [aria-expanded='true'] & {
      transform: rotate(180deg);
    }
  }

}

.accordion-panel {
  display: block;
  position: relative;
  top: 0;
  height: auto;
  overflow: hidden;
  padding: $base-spacing $base-spacing $small-spacing;
  border: solid $small-spacing $lighter-aqua;
  border-top: none;
  border-bottom-right-radius: $tiny-border-radius;
  border-bottom-left-radius: $tiny-border-radius;
  transition: padding $transition-timing $transition-easing, border $transition-timing $transition-easing, position $transition-timing $transition-easing;

  [aria-expanded='false'] & {
    z-index: -1;
    height: 0;
    padding-top: 0;
    padding-bottom: 0;
    top: $small-spacing * -2;
  }

  :first-child {
    margin-top: 0;
  }

}

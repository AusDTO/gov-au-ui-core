/*
Forms

Form elements and attributes in HTML5 provide a greater degree of semantic mark-up
than HTML4 and remove a great deal of the need for tedious scripting and styling
that was required in HTML4. The forms features in HTML5 provide a better experience
for users by making forms more consistent across different web sites and giving
immediate feedback to the user about data entry. They also provide this experience
to users who have scripting disabled in their browser.

Style guide: Forms
*/

%base-text-input {
  width: 100%;
  outline-offset: 0;
  border: 2px solid $border-colour;
  border-radius: 0;
  background-color: $background-colour;
  padding: $tiny-spacing;

  &:invalid {
    outline: 2px solid $error-colour;
  }

  &:focus {
    outline: 2px solid $focus-colour;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

}

form {

  fieldset,
  p {
    margin: 0 0 $medium-spacing 0;
    padding: 0;
    border: none;
  }

  /*
  Label

  Used to tell the user what to enter into the field

  Markup: <label>Enter your name</label>

  Style guide: Forms.Label
  */

  label {
    display: block;
  }

  /*
  Hint text

  An optional extra descriptor for the input field

  Markup:
  <span class="hint" id="name-hint">Your name is on your birth certificate</span>
  <input type="text" id="name" aria-describedby="name-hint" />

  Style guide: Forms.HintText
  */

  .hint {
    display: block;
    color: $body-secondary-text-colour;
    font-size: rem(14);
  }

  /*
  Text input

  A single line text input

  Markup: <input type="text" />

  :focus - When a user has entered the field with the cursor or mouse
  :invalid  - When a form is submitted with an invalid value
  :disabled - When an input has the `disabled` attribute

  Style guide: Forms.TextInput
  */

  [type='text'],
  [type='email'],
  [type='password'] {
    @extend %base-text-input;
  }

  /*
  Textarea input

  A multi-line text input

  Markup: <textarea></textarea>

  :focus - When a user has entered the field with the cursor or mouse
  :invalid  - When a form is submitted with an invalid value
  :disabled - When an input has the `disabled` attribute

  Style guide: Forms.TextAreaInput
  */

  textarea {
    @extend %base-text-input;
  }

}
